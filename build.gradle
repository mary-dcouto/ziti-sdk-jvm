/*
 * Copyright (c) 2018-2020 NetFoundry, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        mavenCentral()
        google()
        jcenter()
    }
    dependencies {
        classpath("com.android.tools.build:gradle:4.1.1")
        classpath("com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5")
        classpath("org.jetbrains.dokka:dokka-gradle-plugin:1.4.10.2")
    }

    ext.versions = [
            kotlin: '1.4.10',
            coroutines: '1.4.2-native-mt',
            slf4j: '1.7.30',
            junit: '4.13.1'
    ]

    ext.deps = [
            kotlin: "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}",
            kotlinCoroutines: "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}",
            kotlinCoroutines8: "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:${versions.coroutines}",
            kotlinTest: "org.jetbrains.kotlin:kotlin-test-junit:${versions.kotlin}",
            kotlinCoroutinesTest: "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.coroutines}",
            slf4jApi: "org.slf4j:slf4j-api:${versions.slf4j}",
            slf4jSimple: "org.slf4j:slf4j-simple:${versions.slf4j}",
            junit: "junit:junit:${versions.junit}"
    ]
}

plugins {
    id("org.jetbrains.kotlin.jvm") version "1.4.10"
    id("io.wusa.semver-git-plugin") version "2.3.1"
}

repositories {
    mavenCentral()
    google()
}

ext {
    zitiBuildnum = System.getenv("BUILD_NUMBER") ?: "local"
    zitiBaseVersion = file("version").readLines()[0].trim()

    bintrayOrg = System.getenv('BINTRAY_ORG') ?: 'openziti'
    bintrayRepo = System.getenv('BINTRAY_REPO') ?: "maven"
}

group = "org.openziti"

semver {
    //nextVersion = "patch"
    snapshotSuffix = "pre"
    initialVersion = "0.1.0"
    tagType = io.wusa.TagType.LIGHTWEIGHT
    branches {
        branch {
            regex = "master"
            incrementer = "NO_VERSION_INCREMENTER"
            formatter = { info -> "${info.version.major}.${info.version.minor}.${info.version.patch}" }
        }
        branch {
            regex = ".+"
            incrementer = "PATCH_INCREMENTER"
            formatter = { info ->
                def v = info.version
                """${v.major}.${v.minor}.${v.patch}-${v.suffix?.count ?: "0"}.${v.suffix?.sha}-${info.branch.id}"""
            }
        }
    }
}

ext {
    gitInfo = semver.info
    gitCommit = semver.info.shortCommit
    gitBranch = semver.info.branch.name
}

version = semver.info

subprojects {
    group = rootProject.group
    version = rootProject.version

    repositories {
        mavenCentral()
        jcenter()
    }

    tasks.withType(PublishToMavenRepository).all {
        onlyIf { !gitInfo.dirty }
    }
}

subprojects { p ->
    if (!p.identityPath.path.startsWith(":samples")) {
        p.plugins.apply('maven-publish')
        if (p.hasProperty('kotlin')) {
            p.plugins.apply('org.jetbrains.dokka')
        }

        p.publishing.publications.whenObjectAdded { pub ->
            println("adding ${pub.name} to ${p.name}")
            pub.pom {
                licenses {
                    license {
                        name = "The Apache Software License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        distribution = "repo"
                    }
                }
                developers {
                    developer {
                        id = "advdev"
                        name = "NetFoundry Advanced Development Team"
                        email = "adv-dev@netfoundry.io"
                    }
                }

                scm {
                    url = "https://github.com/openziti/ziti-sdk-jvm"
                }
            }
        }
    }
}
